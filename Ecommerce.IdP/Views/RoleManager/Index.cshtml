@using Microsoft.AspNetCore.Identity;
@model IEnumerable<IdentityRole>
@{
    ViewData["Title"] = "Roles Manager";
}
<div class="container mt-4">
    <h2 class="mb-3">Role Management</h2>

    <!-- Add Role Button -->
    <button class="btn btn-success mb-3" id="AddRole" data-bs-toggle="modal" data-bs-target="#addRoleModal">
        Add Role
    </button>

    <!-- Roles Table -->
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>

                <th>Role ID</th>
                <th>Role Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Model)
            {
                <tr>
                    <td>
                        @role.Id
                    </td>
                    <td>
                        @role.Name
                    </td>
                    <td>
                        <button class="btn btn-primary btn-sm">Edit</button>
                        <button class="btn btn-danger btn-sm">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal fade" id="addRoleModal" tabindex="-1" aria-labelledby="addRoleModalLabel" style="display: none;" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRoleModalLabel">Add New Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addRoleForm">
                    <div class="mb-3">
                        <label for="roleName" class="form-label">Role Name</label>
                        <input type="text" class="form-control" id="roleName" placeholder="Enter role name" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Role</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
      $(document).ready(function () {
        // Handle form submission
          $("#AddRole").click(function() {
        $('#addRoleModal').modal('show').attr('aria-hidden', 'false');
    });

        $("#addRoleForm").submit(function (event) {
            event.preventDefault(); // Prevent the form from submitting the traditional way

            let roleName = $("#roleName").val().trim();  // Get the role name input value

            // Check if the input is empty
            if (roleName === "") {
                alert("Please enter a role name.");
                return;
            }

            // Create the CreateRole object
            var createRole = {
                roleName: roleName  // Same property name as the model
            };
            console.log(createRole.roleName);
            // Send AJAX request
            $.ajax({
                url: "/RoleManager/AddRole",  // The URL to your API endpoint
                type: "POST",                 // POST request
                contentType: "application/json",
                data: JSON.stringify(createRole),  // Send the CreateRole object as JSON
                success: function (response) {
                    // Handle success
                    if (response.success) {
                        alert(response.message);
                        $("#roleTableBody").append(`<tr><td>#</td><td>${roleName}</td></tr>`);  // Add new role to the table
                        $("#roleName").val(""); // Clear the input field
                        $("#addRoleModal").modal("hide"); // Hide the modal
                        $('#addRoleModal').modal('hide').attr('aria-hidden', 'true');

                    } else {
                        alert(response.message);  // Show the error message if the role wasn't added
                    }

                },
                error: function (xhr, status, error) {
                    // Handle AJAX error
                    alert("Error: " + xhr.responseText);
                }
            });

        });

    });

</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
